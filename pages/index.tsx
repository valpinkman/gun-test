import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
// import iris from "iris-lib";
import SEA from "gun/sea";
import { useCallback, useEffect, useRef, useState } from "react";
import useGun from "../src/hooks/useGun";

export default function Home() {
  const { gun, login: gunLogin, createUser } = useGun();
  const [msgs, setMsgs] = useState([]);
  const alias = useRef(null);
  const login = useRef(null);
  const password = useRef(null);
  const message = useRef(null);

  const logLogin = useRef(null);
  const logPassword = useRef(null);

  console.log("home", gun);

  const onBtnClick = useCallback(
    (e) => {
      e.preventDefault();
      if (!login.current?.value || !password.current?.value) return;
      const a = login.current?.value ?? login.current.value;
      createUser(login.current.value, a, password.current.value);

      password.current.value = "";
      alias.current.value = "";
      login.current.value = "";
    },
    [gun]
  );

  const sendMessage = useCallback(
    (e) => {
      e.preventDefault();
      if (!message.current?.value) return;
      if (!gun) return;
      const messages = gun.get("messages-1234");
      messages.set({
        message: message.current.value,
        createdAt: Date.now(),
      });
      message.current.value = "";
    },
    [gun]
  );

  const log = useCallback(
    (e) => {
      if (logLogin.current?.value && logPassword.current?.value) {
        gunLogin(logLogin.current.value, logPassword.current.value);
      }
    },
    [gunLogin]
  );

  useEffect(() => {
    if (!gun) return;
    const messages = gun.get("messages-1234");
    const match = {
      // lexical queries are kind of like a limited RegEx or Glob.
      ".": {
        // property selector
        ">": new Date(+new Date() - 1 * 1000 * 60 * 60 * 3).toISOString(), // find any indexed property larger ~3 hours ago
      },
      "-": 1, // filter in reverse
    };
    messages.map(match).once((m, id) => {
      console.log(m, id);
      setMsgs((s) => [...s, { ...m, id }]);
    });

    () => messages.off();
  }, [gun]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <div className={styles.description}>
          <input ref={alias} type="text" name="alias" placeholder="alias" />
          <input ref={login} type="text" name="login" placeholder="login" />
          <input
            ref={password}
            type="password"
            name="password"
            placeholder="password"
          />
          <button onClick={onBtnClick}>create user</button>
        </div>

        <div className={styles.description}>
          <input ref={logLogin} type="text" name="login" placeholder="login" />
          <input
            ref={logPassword}
            type="password"
            name="password"
            placeholder="password"
          />

          <button onClick={log}>login</button>
        </div>

        <div className={styles.description}>
          <input
            ref={message}
            type="text"
            name="message"
            placeholder="message"
          />

          <button onClick={sendMessage}>send message</button>
        </div>

        <ul className={styles.description}>
          {msgs.map((m) => {
            return <li key={m.createdAt}>{m.message}</li>;
          })}
        </ul>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}
